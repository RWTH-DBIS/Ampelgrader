# Generated by Django 5.0 on 2023-12-20 08:42

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Cell",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cell_id", models.CharField(db_column="cell_id", max_length=255)),
                (
                    "max_score",
                    models.IntegerField(
                        db_column="max_score",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Exercise",
            fields=[
                (
                    "identifier",
                    models.CharField(
                        db_column="identifier",
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "start_date",
                    models.DateTimeField(
                        db_column="start_date",
                        verbose_name="Starting date exercise grading",
                    ),
                ),
                (
                    "stop_date",
                    models.DateTimeField(
                        db_column="stop_date", verbose_name="End date exercise grading"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GradingProcess",
            fields=[
                (
                    "identifier",
                    models.UUIDField(
                        db_column="identifier",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("email", models.EmailField(db_column="email", max_length=254)),
                (
                    "requested_at",
                    models.DateTimeField(auto_now_add=True, db_column="requested_at"),
                ),
                (
                    "for_exercise",
                    models.ForeignKey(
                        db_column="for_exercise",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="grader.exercise",
                    ),
                ),
            ],
            options={
                "db_table": "gradingprocess",
            },
        ),
        migrations.CreateModel(
            name="Grading",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("points", models.IntegerField(db_column="points")),
                (
                    "cell",
                    models.ForeignKey(
                        db_column="cell",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="grader.cell",
                    ),
                ),
                (
                    "process",
                    models.ForeignKey(
                        db_column="process",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="grader.gradingprocess",
                    ),
                ),
            ],
            options={
                "db_table": "grading",
            },
        ),
        migrations.CreateModel(
            name="ErrorLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("log", models.TextField(db_column="log")),
                (
                    "process",
                    models.OneToOneField(
                        db_column="process",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="grader.gradingprocess",
                    ),
                ),
            ],
            options={
                "db_table": "errorlog",
            },
        ),
        migrations.CreateModel(
            name="Notebook",
            fields=[
                (
                    "filename",
                    models.CharField(
                        db_column="filename",
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "in_exercise",
                    models.OneToOneField(
                        db_column="in_exercise",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="grader.exercise",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SubExercise",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(db_column="label", max_length=255)),
                (
                    "in_notebook",
                    models.ForeignKey(
                        db_column="in_notebook",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="grader.notebook",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="cell",
            name="sub_exercise",
            field=models.ForeignKey(
                db_column="sub_exercise",
                on_delete=django.db.models.deletion.CASCADE,
                to="grader.subexercise",
            ),
        ),
        migrations.CreateModel(
            name="WorkerAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "worker_id",
                    models.UUIDField(
                        db_column="worker_id", default=uuid.uuid4, editable=False
                    ),
                ),
                (
                    "assigned_at",
                    models.DateTimeField(auto_now_add=True, db_column="assigned_at"),
                ),
                (
                    "process",
                    models.ForeignKey(
                        db_column="process",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="grader.gradingprocess",
                    ),
                ),
            ],
            options={
                "db_table": "workerassignment",
            },
        ),
        migrations.CreateModel(
            name="StudentNotebook",
            fields=[
                ("data", models.BinaryField(db_column="data")),
                (
                    "process",
                    models.ForeignKey(
                        db_column="process",
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="grader.gradingprocess",
                    ),
                ),
                (
                    "notebook",
                    models.ForeignKey(
                        db_column="notebook",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="grader.notebook",
                    ),
                ),
            ],
            options={
                "db_table": "studentnotebook",
            },
        ),
        migrations.AddConstraint(
            model_name="grading",
            constraint=models.UniqueConstraint(
                fields=("process", "cell"), name="unique_grading_for_cell_in_process"
            ),
        ),
    ]
